2017-04-11 00:08:36,679 DEBUG org.apache.ibatis.logging.LogFactory (setImplementation:135) [RMI TCP Connection(5)-127.0.0.1] - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2017-04-11 00:08:38,355 INFO  com.kovka.web.util.Initializer (contextInitialized:62) [RMI TCP Connection(5)-127.0.0.1] - -- start application -- 
2017-04-11 00:08:38,356 INFO  com.kovka.web.util.Initializer (contextInitialized:76) [RMI TCP Connection(5)-127.0.0.1] - **************************************************************************************************
2017-04-11 00:08:38,357 INFO  com.kovka.web.util.Initializer (contextInitialized:77) [RMI TCP Connection(5)-127.0.0.1] - contextPath=>F:\workaspace\github\Kovka\target\Kovka-1.0-SNAPSHOT\
2017-04-11 00:08:38,361 INFO  com.kovka.web.util.Initializer (contextInitialized:78) [RMI TCP Connection(5)-127.0.0.1] - **************************************************************************************************
2017-04-11 00:08:38,365 INFO  com.kovka.web.util.Initializer (contextInitialized:93) [RMI TCP Connection(5)-127.0.0.1] - Application 1.0 intitilize params [imagePath:.]
2017-04-11 00:08:38,366 INFO  com.kovka.web.util.Initializer (initFolders:195) [RMI TCP Connection(5)-127.0.0.1] - . folder already exist
2017-04-11 00:08:38,368 INFO  com.kovka.web.util.Initializer (initFolders:195) [RMI TCP Connection(5)-127.0.0.1] - .\merchantData folder already exist
2017-04-11 00:08:38,369 INFO  com.kovka.web.util.Initializer (initFolders:195) [RMI TCP Connection(5)-127.0.0.1] - .\merchantData\agreementDocument folder already exist
2017-04-11 00:08:38,370 INFO  com.kovka.web.util.Initializer (initFolders:195) [RMI TCP Connection(5)-127.0.0.1] - .\merchantData\company folder already exist
2017-04-11 00:08:38,535 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Log4JLogChute using logger 'VLOG'
2017-04-11 00:08:38,537 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Initializing Velocity, Calling init()...
2017-04-11 00:08:38,538 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Starting Apache Velocity v1.7 (compiled: 2010-11-19 12:14:37)
2017-04-11 00:08:38,539 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Default Properties File: org\apache\velocity\runtime\defaults\velocity.properties
2017-04-11 00:08:38,540 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Trying to use logger class org.apache.velocity.runtime.log.Log4JLogChute
2017-04-11 00:08:38,540 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Using logger class org.apache.velocity.runtime.log.Log4JLogChute
2017-04-11 00:08:38,558 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - ResourceLoader instantiated: org.apache.velocity.tools.view.WebappResourceLoader
2017-04-11 00:08:38,563 INFO  org.apache.velocity.runtime.log.Log4JLogChute (log:151) [RMI TCP Connection(5)-127.0.0.1] - WebappResourceLoader: added template path - '/WEB-INF/webapptemplate/'
2017-04-11 00:08:38,608 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - ResourceCache: initialized (class org.apache.velocity.runtime.resource.ResourceCacheImpl) with class java.util.Collections$SynchronizedMap cache map.
2017-04-11 00:08:38,612 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Loaded System Directive: org.apache.velocity.runtime.directive.Stop
2017-04-11 00:08:38,617 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Loaded System Directive: org.apache.velocity.runtime.directive.Define
2017-04-11 00:08:38,621 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Loaded System Directive: org.apache.velocity.runtime.directive.Break
2017-04-11 00:08:38,626 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Loaded System Directive: org.apache.velocity.runtime.directive.Evaluate
2017-04-11 00:08:38,629 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Loaded System Directive: org.apache.velocity.runtime.directive.Literal
2017-04-11 00:08:38,633 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Loaded System Directive: org.apache.velocity.runtime.directive.Macro
2017-04-11 00:08:38,637 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Loaded System Directive: org.apache.velocity.runtime.directive.Parse
2017-04-11 00:08:38,641 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Loaded System Directive: org.apache.velocity.runtime.directive.Include
2017-04-11 00:08:38,644 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Loaded System Directive: org.apache.velocity.runtime.directive.Foreach
2017-04-11 00:08:38,728 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Created '20' parsers.
2017-04-11 00:08:38,742 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Velocimacro : "velocimacro.library" is not set.  Trying default library: VM_global_library.vm
2017-04-11 00:08:38,744 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Could not load resource 'VM_global_library.vm' from ResourceLoader org.apache.velocity.tools.view.WebappResourceLoader: WebappResourceLoader: Resource 'VM_global_library.vm' not found.
2017-04-11 00:08:38,744 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Velocimacro : Default library not found.
2017-04-11 00:08:38,745 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Velocimacro : allowInline = true : VMs can be defined inline in templates
2017-04-11 00:08:38,745 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Velocimacro : allowInlineToOverride = false : VMs defined inline may NOT replace previous VM definitions
2017-04-11 00:08:38,746 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Velocimacro : allowInlineLocal = false : VMs defined inline will be global in scope if allowed.
2017-04-11 00:08:38,746 DEBUG org.apache.velocity.runtime.log.Log4JLogChute (log:168) [RMI TCP Connection(5)-127.0.0.1] - Velocimacro : autoload off : VM system will not automatically reload global library macros
2017-04-11 00:08:38,746 INFO  com.kovka.web.util.Initializer (contextInitialized:107) [RMI TCP Connection(5)-127.0.0.1] - -- application started -- 
2017-04-11 00:08:40,938 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(5)-127.0.0.1] - Couldn't find template in cache for "org/apache/struts2/dispatcher/error.ftl"("en_US", UTF-8, parsed); will try to load it.
2017-04-11 00:08:40,942 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(5)-127.0.0.1] - TemplateLoader.findTemplateSource("org/apache/struts2/dispatcher/error.ftl"): Found
2017-04-11 00:08:40,945 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(5)-127.0.0.1] - Loading template for "org/apache/struts2/dispatcher/error.ftl"("en_US", UTF-8, parsed) from "jar:file:/F:/workaspace/github/Kovka/target/Kovka-1.0-SNAPSHOT/WEB-INF/lib/struts2-core-2.5.2.jar!/org/apache/struts2/dispatcher/error.ftl"
2017-04-11 00:08:56,056 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-7] - Key "location" was not found on instance of org.springframework.beans.factory.BeanCreationException. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getLocalizedMessage=public java.lang.String java.lang.Throwable.getLocalizedMessage(), java.lang.Object@713a363f=freemarker.ext.beans.OverloadedMethods@6017e239, java.lang.Object@adc1f94={public java.lang.Throwable[] org.springframework.beans.factory.BeanCreationException.getRelatedCauses()=[Ljava.lang.Class;@6448831e, public java.lang.String java.lang.Throwable.getLocalizedMessage()=[Ljava.lang.Class;@7d12d3, public boolean org.springframework.beans.factory.BeanCreationException.contains(java.lang.Class)=[Ljava.lang.Class;@74ea02a4, public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable)=[Ljava.lang.Class;@2b33202a, public void org.springframework.beans.factory.BeanCreationException.addRelatedCause(java.lang.Throwable)=[Ljava.lang.Class;@b431621, public java.lang.String org.springframework.core.NestedRuntimeException.getMessage()=[Ljava.lang.Class;@63406610, public java.lang.Throwable org.springframework.core.NestedRuntimeException.getMostSpecificCause()=[Ljava.lang.Class;@479bb7fe, public synchronized java.lang.Throwable java.lang.Throwable.getCause()=[Ljava.lang.Class;@759bfd57, public java.lang.String org.springframework.beans.factory.BeanCreationException.toString()=[Ljava.lang.Class;@66fa1fdb, public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])=[Ljava.lang.Class;@6ea95f2, public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()=[Ljava.lang.Class;@1c54e696, public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)=[Ljava.lang.Class;@368fd10e, public java.lang.String org.springframework.beans.factory.BeanCreationException.getResourceDescription()=[Ljava.lang.Class;@bd04c3, public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()=[Ljava.lang.Class;@522a5423, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@69f168a6, public int org.springframework.beans.BeansException.hashCode()=[Ljava.lang.Class;@213ed337, public boolean org.springframework.beans.BeansException.equals(java.lang.Object)=[Ljava.lang.Class;@49cd50cf, public java.lang.Throwable org.springframework.core.NestedRuntimeException.getRootCause()=[Ljava.lang.Class;@49469e99, public java.lang.String org.springframework.beans.factory.BeanCreationException.getBeanName()=[Ljava.lang.Class;@2b907b4f, public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace()=[Ljava.lang.Class;@7ce0b261}, cause=java.beans.PropertyDescriptor[name=cause; propertyType=class java.lang.Throwable; readMethod=public synchronized java.lang.Throwable java.lang.Throwable.getCause()], getBeanName=public java.lang.String org.springframework.beans.factory.BeanCreationException.getBeanName(), getCause=public synchronized java.lang.Throwable java.lang.Throwable.getCause(), getResourceDescription=public java.lang.String org.springframework.beans.factory.BeanCreationException.getResourceDescription(), getStackTrace=public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace(), addSuppressed=public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable), hashCode=public int org.springframework.beans.BeansException.hashCode(), rootCause=java.beans.PropertyDescriptor[name=rootCause; propertyType=class java.lang.Throwable; readMethod=public java.lang.Throwable org.springframework.core.NestedRuntimeException.getRootCause()], beanName=java.beans.PropertyDescriptor[name=beanName; propertyType=class java.lang.String; readMethod=public java.lang.String org.springframework.beans.factory.BeanCreationException.getBeanName()], getSuppressed=public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed(), suppressed=java.beans.PropertyDescriptor[name=suppressed; propertyType=class [Ljava.lang.Throwable;; readMethod=public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()], stackTrace=java.beans.PropertyDescriptor[name=stackTrace; propertyType=class [Ljava.lang.StackTraceElement;; readMethod=public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()], relatedCauses=java.beans.PropertyDescriptor[name=relatedCauses; propertyType=class [Ljava.lang.Throwable;; readMethod=public java.lang.Throwable[] org.springframework.beans.factory.BeanCreationException.getRelatedCauses()], getRootCause=public java.lang.Throwable org.springframework.core.NestedRuntimeException.getRootCause(), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], addRelatedCause=public void org.springframework.beans.factory.BeanCreationException.addRelatedCause(java.lang.Throwable), localizedMessage=java.beans.PropertyDescriptor[name=localizedMessage; propertyType=class java.lang.String; readMethod=public java.lang.String java.lang.Throwable.getLocalizedMessage()], printStackTrace=freemarker.ext.beans.OverloadedMethods@5f88ce1a, initCause=public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable), resourceDescription=java.beans.PropertyDescriptor[name=resourceDescription; propertyType=class java.lang.String; readMethod=public java.lang.String org.springframework.beans.factory.BeanCreationException.getResourceDescription()], mostSpecificCause=java.beans.PropertyDescriptor[name=mostSpecificCause; propertyType=class java.lang.Throwable; readMethod=public java.lang.Throwable org.springframework.core.NestedRuntimeException.getMostSpecificCause()], getMessage=public java.lang.String org.springframework.core.NestedRuntimeException.getMessage(), message=java.beans.PropertyDescriptor[name=message; propertyType=class java.lang.String; readMethod=public java.lang.String org.springframework.core.NestedRuntimeException.getMessage()], getMostSpecificCause=public java.lang.Throwable org.springframework.core.NestedRuntimeException.getMostSpecificCause(), contains=public boolean org.springframework.beans.factory.BeanCreationException.contains(java.lang.Class), setStackTrace=public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[]), equals=public boolean org.springframework.beans.BeansException.equals(java.lang.Object), getRelatedCauses=public java.lang.Throwable[] org.springframework.beans.factory.BeanCreationException.getRelatedCauses(), toString=public java.lang.String org.springframework.beans.factory.BeanCreationException.toString(), fillInStackTrace=public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace()}
2017-04-11 00:08:56,069 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-7] - Key "location" was not found on instance of org.springframework.beans.factory.NoSuchBeanDefinitionException. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getLocalizedMessage=public java.lang.String java.lang.Throwable.getLocalizedMessage(), java.lang.Object@713a363f=freemarker.ext.beans.OverloadedMethods@22473124, java.lang.Object@adc1f94={public java.lang.String java.lang.Throwable.getLocalizedMessage()=[Ljava.lang.Class;@aa56c20, public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable)=[Ljava.lang.Class;@732fa4af, public java.lang.Class org.springframework.beans.factory.NoSuchBeanDefinitionException.getBeanType()=[Ljava.lang.Class;@6a4e5cce, public java.lang.String org.springframework.core.NestedRuntimeException.getMessage()=[Ljava.lang.Class;@711b8eb2, public java.lang.Throwable org.springframework.core.NestedRuntimeException.getMostSpecificCause()=[Ljava.lang.Class;@50fe38dd, public synchronized java.lang.Throwable java.lang.Throwable.getCause()=[Ljava.lang.Class;@5e7af4b1, public int org.springframework.beans.factory.NoSuchBeanDefinitionException.getNumberOfBeansFound()=[Ljava.lang.Class;@46ca7b9c, public boolean org.springframework.core.NestedRuntimeException.contains(java.lang.Class)=[Ljava.lang.Class;@6b8903e9, public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])=[Ljava.lang.Class;@4a90e695, public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()=[Ljava.lang.Class;@43c64c0a, public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)=[Ljava.lang.Class;@56c5d975, public java.lang.String java.lang.Throwable.toString()=[Ljava.lang.Class;@75701e0f, public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()=[Ljava.lang.Class;@3819ea7a, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@494e576f, public int org.springframework.beans.BeansException.hashCode()=[Ljava.lang.Class;@31b83142, public boolean org.springframework.beans.BeansException.equals(java.lang.Object)=[Ljava.lang.Class;@444dd11c, public java.lang.String org.springframework.beans.factory.NoSuchBeanDefinitionException.getBeanName()=[Ljava.lang.Class;@33f0a9d5, public java.lang.Throwable org.springframework.core.NestedRuntimeException.getRootCause()=[Ljava.lang.Class;@8be65eb, public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace()=[Ljava.lang.Class;@787c779f}, cause=java.beans.PropertyDescriptor[name=cause; propertyType=class java.lang.Throwable; readMethod=public synchronized java.lang.Throwable java.lang.Throwable.getCause()], getBeanName=public java.lang.String org.springframework.beans.factory.NoSuchBeanDefinitionException.getBeanName(), getCause=public synchronized java.lang.Throwable java.lang.Throwable.getCause(), beanType=java.beans.PropertyDescriptor[name=beanType; propertyType=class java.lang.Class; readMethod=public java.lang.Class org.springframework.beans.factory.NoSuchBeanDefinitionException.getBeanType()], getStackTrace=public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace(), addSuppressed=public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable), hashCode=public int org.springframework.beans.BeansException.hashCode(), rootCause=java.beans.PropertyDescriptor[name=rootCause; propertyType=class java.lang.Throwable; readMethod=public java.lang.Throwable org.springframework.core.NestedRuntimeException.getRootCause()], getNumberOfBeansFound=public int org.springframework.beans.factory.NoSuchBeanDefinitionException.getNumberOfBeansFound(), beanName=java.beans.PropertyDescriptor[name=beanName; propertyType=class java.lang.String; readMethod=public java.lang.String org.springframework.beans.factory.NoSuchBeanDefinitionException.getBeanName()], getSuppressed=public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed(), suppressed=java.beans.PropertyDescriptor[name=suppressed; propertyType=class [Ljava.lang.Throwable;; readMethod=public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()], stackTrace=java.beans.PropertyDescriptor[name=stackTrace; propertyType=class [Ljava.lang.StackTraceElement;; readMethod=public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()], getRootCause=public java.lang.Throwable org.springframework.core.NestedRuntimeException.getRootCause(), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], getBeanType=public java.lang.Class org.springframework.beans.factory.NoSuchBeanDefinitionException.getBeanType(), localizedMessage=java.beans.PropertyDescriptor[name=localizedMessage; propertyType=class java.lang.String; readMethod=public java.lang.String java.lang.Throwable.getLocalizedMessage()], printStackTrace=freemarker.ext.beans.OverloadedMethods@52939cbd, initCause=public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable), mostSpecificCause=java.beans.PropertyDescriptor[name=mostSpecificCause; propertyType=class java.lang.Throwable; readMethod=public java.lang.Throwable org.springframework.core.NestedRuntimeException.getMostSpecificCause()], getMessage=public java.lang.String org.springframework.core.NestedRuntimeException.getMessage(), message=java.beans.PropertyDescriptor[name=message; propertyType=class java.lang.String; readMethod=public java.lang.String org.springframework.core.NestedRuntimeException.getMessage()], numberOfBeansFound=java.beans.PropertyDescriptor[name=numberOfBeansFound; propertyType=int; readMethod=public int org.springframework.beans.factory.NoSuchBeanDefinitionException.getNumberOfBeansFound()], getMostSpecificCause=public java.lang.Throwable org.springframework.core.NestedRuntimeException.getMostSpecificCause(), contains=public boolean org.springframework.core.NestedRuntimeException.contains(java.lang.Class), setStackTrace=public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[]), equals=public boolean org.springframework.beans.BeansException.equals(java.lang.Object), toString=public java.lang.String java.lang.Throwable.toString(), fillInStackTrace=public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace()}
2017-04-11 18:49:32,670 DEBUG org.apache.ibatis.logging.LogFactory (setImplementation:135) [RMI TCP Connection(3)-127.0.0.1] - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2017-04-11 18:49:34,117 INFO  com.kovka.web.util.Initializer (contextInitialized:49) [RMI TCP Connection(3)-127.0.0.1] - -- start application -- 
2017-04-11 18:49:34,118 INFO  com.kovka.web.util.Initializer (contextInitialized:63) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 18:49:34,118 INFO  com.kovka.web.util.Initializer (contextInitialized:64) [RMI TCP Connection(3)-127.0.0.1] - contextPath=>D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\
2017-04-11 18:49:34,118 INFO  com.kovka.web.util.Initializer (contextInitialized:65) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 18:49:34,121 INFO  com.kovka.web.util.Initializer (contextInitialized:80) [RMI TCP Connection(3)-127.0.0.1] - Application 1.0 intitilize params [imagePath:.]
2017-04-11 18:49:34,122 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - . folder already exist
2017-04-11 18:49:34,133 INFO  com.kovka.web.util.Initializer (deRegistering:108) [RMI TCP Connection(3)-127.0.0.1] - DeRegistering jdbc driver: com.mysql.jdbc.Driver@3b2618eb
2017-04-11 18:49:34,160 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:109) [RMI TCP Connection(3)-127.0.0.1] - Creating a new SqlSession
2017-04-11 18:49:34,170 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:145) [RMI TCP Connection(3)-127.0.0.1] - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e1cadb9] was not registered for synchronization because synchronization is not active
2017-04-11 18:49:34,171 DEBUG org.mybatis.spring.SqlSessionUtils (closeSqlSession:173) [RMI TCP Connection(3)-127.0.0.1] - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e1cadb9]
2017-04-11 18:52:59,230 DEBUG org.apache.ibatis.logging.LogFactory (setImplementation:135) [RMI TCP Connection(3)-127.0.0.1] - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2017-04-11 18:53:00,820 INFO  com.kovka.web.util.Initializer (contextInitialized:49) [RMI TCP Connection(3)-127.0.0.1] - -- start application -- 
2017-04-11 18:53:00,821 INFO  com.kovka.web.util.Initializer (contextInitialized:63) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 18:53:00,821 INFO  com.kovka.web.util.Initializer (contextInitialized:64) [RMI TCP Connection(3)-127.0.0.1] - contextPath=>D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\
2017-04-11 18:53:00,821 INFO  com.kovka.web.util.Initializer (contextInitialized:65) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 18:53:00,824 INFO  com.kovka.web.util.Initializer (contextInitialized:80) [RMI TCP Connection(3)-127.0.0.1] - Application 1.0 intitilize params [imagePath:.]
2017-04-11 18:53:00,824 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - . folder already exist
2017-04-11 18:53:00,837 INFO  com.kovka.web.util.Initializer (deRegistering:108) [RMI TCP Connection(3)-127.0.0.1] - DeRegistering jdbc driver: com.mysql.jdbc.Driver@4f9cbb24
2017-04-11 18:53:00,874 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:109) [RMI TCP Connection(3)-127.0.0.1] - Creating a new SqlSession
2017-04-11 18:53:00,887 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:145) [RMI TCP Connection(3)-127.0.0.1] - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bcddd7c] was not registered for synchronization because synchronization is not active
2017-04-11 18:53:00,887 DEBUG org.mybatis.spring.SqlSessionUtils (closeSqlSession:173) [RMI TCP Connection(3)-127.0.0.1] - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bcddd7c]
2017-04-11 18:56:10,055 DEBUG org.apache.ibatis.logging.LogFactory (setImplementation:135) [RMI TCP Connection(3)-127.0.0.1] - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2017-04-11 18:56:11,351 INFO  com.kovka.web.util.Initializer (contextInitialized:49) [RMI TCP Connection(3)-127.0.0.1] - -- start application -- 
2017-04-11 18:56:11,351 INFO  com.kovka.web.util.Initializer (contextInitialized:63) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 18:56:11,352 INFO  com.kovka.web.util.Initializer (contextInitialized:64) [RMI TCP Connection(3)-127.0.0.1] - contextPath=>D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\
2017-04-11 18:56:11,352 INFO  com.kovka.web.util.Initializer (contextInitialized:65) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 18:56:11,356 INFO  com.kovka.web.util.Initializer (contextInitialized:80) [RMI TCP Connection(3)-127.0.0.1] - Application 1.0 intitilize params [imagePath:.]
2017-04-11 18:56:11,356 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - . folder already exist
2017-04-11 18:56:11,384 INFO  com.kovka.web.util.Initializer (deRegistering:108) [RMI TCP Connection(3)-127.0.0.1] - DeRegistering jdbc driver: com.mysql.jdbc.Driver@6c6c0d0a
2017-04-11 18:56:11,417 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:109) [RMI TCP Connection(3)-127.0.0.1] - Creating a new SqlSession
2017-04-11 18:56:11,431 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:145) [RMI TCP Connection(3)-127.0.0.1] - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d4f0120] was not registered for synchronization because synchronization is not active
2017-04-11 18:56:11,431 DEBUG org.mybatis.spring.SqlSessionUtils (closeSqlSession:173) [RMI TCP Connection(3)-127.0.0.1] - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d4f0120]
2017-04-11 18:56:56,909 DEBUG org.apache.ibatis.logging.LogFactory (setImplementation:135) [RMI TCP Connection(3)-127.0.0.1] - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2017-04-11 18:57:00,836 INFO  com.kovka.web.util.Initializer (contextInitialized:49) [RMI TCP Connection(3)-127.0.0.1] - -- start application -- 
2017-04-11 18:57:05,823 INFO  com.kovka.web.util.Initializer (contextInitialized:63) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 18:57:06,295 INFO  com.kovka.web.util.Initializer (contextInitialized:64) [RMI TCP Connection(3)-127.0.0.1] - contextPath=>D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\
2017-04-11 18:57:06,709 INFO  com.kovka.web.util.Initializer (contextInitialized:65) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 18:57:10,228 INFO  com.kovka.web.util.Initializer (contextInitialized:80) [RMI TCP Connection(3)-127.0.0.1] - Application 1.0 intitilize params [imagePath:.]
2017-04-11 18:57:11,079 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - . folder already exist
2017-04-11 18:57:25,231 INFO  com.kovka.web.util.Initializer (deRegistering:108) [RMI TCP Connection(3)-127.0.0.1] - DeRegistering jdbc driver: com.mysql.jdbc.Driver@5508476e
2017-04-11 18:57:25,308 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:109) [RMI TCP Connection(3)-127.0.0.1] - Creating a new SqlSession
2017-04-11 18:57:25,322 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:145) [RMI TCP Connection(3)-127.0.0.1] - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ca6bd6e] was not registered for synchronization because synchronization is not active
2017-04-11 18:57:25,322 DEBUG org.mybatis.spring.SqlSessionUtils (closeSqlSession:173) [RMI TCP Connection(3)-127.0.0.1] - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ca6bd6e]
2017-04-11 18:57:44,158 DEBUG org.apache.ibatis.logging.LogFactory (setImplementation:135) [RMI TCP Connection(3)-127.0.0.1] - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2017-04-11 18:57:48,642 INFO  com.kovka.web.util.Initializer (contextInitialized:49) [RMI TCP Connection(3)-127.0.0.1] - -- start application -- 
2017-04-11 18:57:48,643 INFO  com.kovka.web.util.Initializer (contextInitialized:63) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 18:57:48,644 INFO  com.kovka.web.util.Initializer (contextInitialized:64) [RMI TCP Connection(3)-127.0.0.1] - contextPath=>D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\
2017-04-11 18:57:48,644 INFO  com.kovka.web.util.Initializer (contextInitialized:65) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 18:57:54,595 INFO  com.kovka.web.util.Initializer (contextInitialized:80) [RMI TCP Connection(3)-127.0.0.1] - Application 1.0 intitilize params [imagePath:.]
2017-04-11 18:58:24,801 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - . folder already exist
2017-04-11 18:58:31,504 INFO  com.kovka.web.util.Initializer (deRegistering:108) [RMI TCP Connection(3)-127.0.0.1] - DeRegistering jdbc driver: com.mysql.jdbc.Driver@7180428c
2017-04-11 18:58:31,533 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:109) [RMI TCP Connection(3)-127.0.0.1] - Creating a new SqlSession
2017-04-11 18:58:31,556 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:145) [RMI TCP Connection(3)-127.0.0.1] - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8db0a3e] was not registered for synchronization because synchronization is not active
2017-04-11 18:58:31,557 DEBUG org.mybatis.spring.SqlSessionUtils (closeSqlSession:173) [RMI TCP Connection(3)-127.0.0.1] - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8db0a3e]
2017-04-11 19:00:03,251 DEBUG org.apache.ibatis.logging.LogFactory (setImplementation:135) [RMI TCP Connection(3)-127.0.0.1] - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2017-04-11 19:00:05,044 INFO  com.kovka.web.util.Initializer (contextInitialized:49) [RMI TCP Connection(3)-127.0.0.1] - -- start application -- 
2017-04-11 19:00:05,046 INFO  com.kovka.web.util.Initializer (contextInitialized:63) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 19:00:05,047 INFO  com.kovka.web.util.Initializer (contextInitialized:64) [RMI TCP Connection(3)-127.0.0.1] - contextPath=>D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\
2017-04-11 19:00:05,047 INFO  com.kovka.web.util.Initializer (contextInitialized:65) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 19:00:08,696 INFO  com.kovka.web.util.Initializer (contextInitialized:80) [RMI TCP Connection(3)-127.0.0.1] - Application 1.0 intitilize params [imagePath:D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\]
2017-04-11 19:00:10,039 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\ folder already exist
2017-04-11 19:00:13,113 INFO  com.kovka.web.util.Initializer (initFolders:132) [RMI TCP Connection(3)-127.0.0.1] - D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\\data folder created successfully
2017-04-11 19:00:14,894 INFO  com.kovka.web.util.Initializer (contextInitialized:90) [RMI TCP Connection(3)-127.0.0.1] - -- application started -- 
2017-04-11 19:00:16,616 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - Couldn't find template in cache for "org/apache/struts2/dispatcher/error.ftl"("ru_RU", UTF-8, parsed); will try to load it.
2017-04-11 19:00:16,619 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - TemplateLoader.findTemplateSource("org/apache/struts2/dispatcher/error.ftl"): Found
2017-04-11 19:00:16,622 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - Loading template for "org/apache/struts2/dispatcher/error.ftl"("ru_RU", UTF-8, parsed) from "jar:file:/D:/Serozh/workspace/git/Kovka/target/Kovka-1.0-SNAPSHOT/WEB-INF/lib/struts2-core-2.5.2.jar!/org/apache/struts2/dispatcher/error.ftl"
2017-04-11 19:00:25,443 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-7] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@3d10592={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@641f8b6b, public void java.util.HashMap.clear()=[Ljava.lang.Class;@29fbc5b, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@19b51163, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6594ab9d, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@7d483097, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@2ca3601, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@33c50132, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@73cd8c94, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4fbdd6f2, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@1c949b3a, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@743c50b, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@1875405b, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@39de1fe1, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@12b1eab, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@1859f818, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2a1c04d0, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@63f42765, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3af3b3f6, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d3d0588, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@274da67b, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@654072f8, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@420b11a5, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@471f4d29, public int java.util.HashMap.size()=[Ljava.lang.Class;@dab45cf}, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@6b1a3130, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@718693cf, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), java.lang.Object@37689fb5=public java.lang.Object java.util.HashMap.get(java.lang.Object), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), java.lang.Object@2197ce6d=freemarker.ext.beans.OverloadedMethods@4c4dfed3, putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:00:25,446 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-7] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@3d10592={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@641f8b6b, public void java.util.HashMap.clear()=[Ljava.lang.Class;@29fbc5b, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@19b51163, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6594ab9d, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@7d483097, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@2ca3601, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@33c50132, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@73cd8c94, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4fbdd6f2, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@1c949b3a, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@743c50b, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@1875405b, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@39de1fe1, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@12b1eab, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@1859f818, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2a1c04d0, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@63f42765, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3af3b3f6, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d3d0588, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@274da67b, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@654072f8, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@420b11a5, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@471f4d29, public int java.util.HashMap.size()=[Ljava.lang.Class;@dab45cf}, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@6b1a3130, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@718693cf, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), java.lang.Object@37689fb5=public java.lang.Object java.util.HashMap.get(java.lang.Object), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), java.lang.Object@2197ce6d=freemarker.ext.beans.OverloadedMethods@4c4dfed3, putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:02:57,189 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@3d10592={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@641f8b6b, public void java.util.HashMap.clear()=[Ljava.lang.Class;@29fbc5b, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@19b51163, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6594ab9d, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@7d483097, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@2ca3601, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@33c50132, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@73cd8c94, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4fbdd6f2, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@1c949b3a, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@743c50b, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@1875405b, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@39de1fe1, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@12b1eab, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@1859f818, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2a1c04d0, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@63f42765, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3af3b3f6, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d3d0588, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@274da67b, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@654072f8, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@420b11a5, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@471f4d29, public int java.util.HashMap.size()=[Ljava.lang.Class;@dab45cf}, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@6b1a3130, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@718693cf, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), java.lang.Object@37689fb5=public java.lang.Object java.util.HashMap.get(java.lang.Object), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), java.lang.Object@2197ce6d=freemarker.ext.beans.OverloadedMethods@4c4dfed3, putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:02:57,291 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@3d10592={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@641f8b6b, public void java.util.HashMap.clear()=[Ljava.lang.Class;@29fbc5b, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@19b51163, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6594ab9d, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@7d483097, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@2ca3601, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@33c50132, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@73cd8c94, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4fbdd6f2, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@1c949b3a, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@743c50b, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@1875405b, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@39de1fe1, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@12b1eab, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@1859f818, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2a1c04d0, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@63f42765, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3af3b3f6, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d3d0588, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@274da67b, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@654072f8, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@420b11a5, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@471f4d29, public int java.util.HashMap.size()=[Ljava.lang.Class;@dab45cf}, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@6b1a3130, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@718693cf, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), java.lang.Object@37689fb5=public java.lang.Object java.util.HashMap.get(java.lang.Object), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), java.lang.Object@2197ce6d=freemarker.ext.beans.OverloadedMethods@4c4dfed3, putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:03:06,790 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@3d10592={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@641f8b6b, public void java.util.HashMap.clear()=[Ljava.lang.Class;@29fbc5b, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@19b51163, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6594ab9d, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@7d483097, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@2ca3601, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@33c50132, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@73cd8c94, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4fbdd6f2, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@1c949b3a, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@743c50b, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@1875405b, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@39de1fe1, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@12b1eab, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@1859f818, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2a1c04d0, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@63f42765, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3af3b3f6, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d3d0588, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@274da67b, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@654072f8, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@420b11a5, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@471f4d29, public int java.util.HashMap.size()=[Ljava.lang.Class;@dab45cf}, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@6b1a3130, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@718693cf, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), java.lang.Object@37689fb5=public java.lang.Object java.util.HashMap.get(java.lang.Object), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), java.lang.Object@2197ce6d=freemarker.ext.beans.OverloadedMethods@4c4dfed3, putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:03:06,795 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@3d10592={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@641f8b6b, public void java.util.HashMap.clear()=[Ljava.lang.Class;@29fbc5b, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@19b51163, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6594ab9d, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@7d483097, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@2ca3601, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@33c50132, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@73cd8c94, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4fbdd6f2, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@1c949b3a, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@743c50b, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@1875405b, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@39de1fe1, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@12b1eab, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@1859f818, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2a1c04d0, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@63f42765, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3af3b3f6, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d3d0588, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@274da67b, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@654072f8, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@420b11a5, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@471f4d29, public int java.util.HashMap.size()=[Ljava.lang.Class;@dab45cf}, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@6b1a3130, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@718693cf, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), java.lang.Object@37689fb5=public java.lang.Object java.util.HashMap.get(java.lang.Object), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), java.lang.Object@2197ce6d=freemarker.ext.beans.OverloadedMethods@4c4dfed3, putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:07:49,394 INFO  com.kovka.web.util.Initializer (deRegistering:108) [localhost-startStop-2] - DeRegistering jdbc driver: com.mysql.jdbc.Driver@5cf1d8da
2017-04-11 19:07:49,415 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:109) [localhost-startStop-2] - Creating a new SqlSession
2017-04-11 19:07:49,426 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:145) [localhost-startStop-2] - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@145c00e8] was not registered for synchronization because synchronization is not active
2017-04-11 19:07:49,427 DEBUG org.mybatis.spring.SqlSessionUtils (closeSqlSession:173) [localhost-startStop-2] - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@145c00e8]
2017-04-11 19:08:12,455 DEBUG org.apache.ibatis.logging.LogFactory (setImplementation:135) [RMI TCP Connection(3)-127.0.0.1] - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2017-04-11 19:08:13,552 INFO  com.kovka.web.util.Initializer (contextInitialized:49) [RMI TCP Connection(3)-127.0.0.1] - -- start application -- 
2017-04-11 19:08:13,553 INFO  com.kovka.web.util.Initializer (contextInitialized:63) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 19:08:13,553 INFO  com.kovka.web.util.Initializer (contextInitialized:64) [RMI TCP Connection(3)-127.0.0.1] - contextPath=>D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\
2017-04-11 19:08:13,553 INFO  com.kovka.web.util.Initializer (contextInitialized:65) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 19:08:13,556 INFO  com.kovka.web.util.Initializer (contextInitialized:80) [RMI TCP Connection(3)-127.0.0.1] - Application 1.0 intitilize params [imagePath:D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\]
2017-04-11 19:08:13,557 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\ folder already exist
2017-04-11 19:08:13,557 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\\data folder already exist
2017-04-11 19:08:13,582 INFO  com.kovka.web.util.Initializer (contextInitialized:90) [RMI TCP Connection(3)-127.0.0.1] - -- application started -- 
2017-04-11 19:08:14,830 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - Couldn't find template in cache for "org/apache/struts2/dispatcher/error.ftl"("ru_RU", UTF-8, parsed); will try to load it.
2017-04-11 19:08:14,834 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - TemplateLoader.findTemplateSource("org/apache/struts2/dispatcher/error.ftl"): Found
2017-04-11 19:08:14,836 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - Loading template for "org/apache/struts2/dispatcher/error.ftl"("ru_RU", UTF-8, parsed) from "jar:file:/D:/Serozh/workspace/git/Kovka/target/Kovka-1.0-SNAPSHOT/WEB-INF/lib/struts2-core-2.5.2.jar!/org/apache/struts2/dispatcher/error.ftl"
2017-04-11 19:26:08,516 INFO  com.kovka.web.util.Initializer (deRegistering:108) [localhost-startStop-2] - DeRegistering jdbc driver: com.mysql.jdbc.Driver@4484ff90
2017-04-11 19:26:08,550 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:109) [localhost-startStop-2] - Creating a new SqlSession
2017-04-11 19:26:08,565 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:145) [localhost-startStop-2] - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b10c56e] was not registered for synchronization because synchronization is not active
2017-04-11 19:26:08,565 DEBUG org.mybatis.spring.SqlSessionUtils (closeSqlSession:173) [localhost-startStop-2] - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b10c56e]
2017-04-11 19:26:37,112 DEBUG org.apache.ibatis.logging.LogFactory (setImplementation:135) [RMI TCP Connection(3)-127.0.0.1] - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2017-04-11 19:26:38,674 INFO  com.kovka.web.util.Initializer (contextInitialized:49) [RMI TCP Connection(3)-127.0.0.1] - -- start application -- 
2017-04-11 19:26:38,675 INFO  com.kovka.web.util.Initializer (contextInitialized:63) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 19:26:38,675 INFO  com.kovka.web.util.Initializer (contextInitialized:64) [RMI TCP Connection(3)-127.0.0.1] - contextPath=>D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\
2017-04-11 19:26:38,675 INFO  com.kovka.web.util.Initializer (contextInitialized:65) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 19:26:38,678 INFO  com.kovka.web.util.Initializer (contextInitialized:80) [RMI TCP Connection(3)-127.0.0.1] - Application 1.0 intitilize params [imagePath:D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\]
2017-04-11 19:26:38,678 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\ folder already exist
2017-04-11 19:26:38,679 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\\data folder already exist
2017-04-11 19:26:38,789 INFO  com.kovka.web.util.Initializer (contextInitialized:90) [RMI TCP Connection(3)-127.0.0.1] - -- application started -- 
2017-04-11 19:26:40,694 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - Couldn't find template in cache for "org/apache/struts2/dispatcher/error.ftl"("ru_RU", UTF-8, parsed); will try to load it.
2017-04-11 19:26:40,700 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - TemplateLoader.findTemplateSource("org/apache/struts2/dispatcher/error.ftl"): Found
2017-04-11 19:26:40,703 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - Loading template for "org/apache/struts2/dispatcher/error.ftl"("ru_RU", UTF-8, parsed) from "jar:file:/D:/Serozh/workspace/git/Kovka/target/Kovka-1.0-SNAPSHOT/WEB-INF/lib/struts2-core-2.5.2.jar!/org/apache/struts2/dispatcher/error.ftl"
2017-04-11 19:27:14,907 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:14,911 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:17,667 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:17,677 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:20,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:20,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:23,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:23,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:26,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:26,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:29,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:29,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:32,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:32,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:35,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:35,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:38,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:38,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:41,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:41,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:44,653 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:44,654 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:47,676 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:47,682 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:50,667 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:50,680 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:53,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:53,670 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:56,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:56,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:59,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:27:59,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:02,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:02,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:05,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:05,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:08,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:08,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:11,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:11,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:14,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:14,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:17,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:17,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:20,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:20,669 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:23,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:23,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:26,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:26,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:29,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:29,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:32,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:32,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:35,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:35,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:38,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:38,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:41,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:41,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:44,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:44,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:47,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:47,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:50,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:50,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:53,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:53,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:56,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:56,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:59,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:28:59,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:02,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:02,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:05,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:05,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:08,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:08,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:11,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:11,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:14,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:14,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:17,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:17,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:20,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:20,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:23,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:23,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:26,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:26,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:29,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:29,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:32,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:32,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:35,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:35,667 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:38,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:38,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:41,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:41,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:44,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:44,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:47,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:47,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:50,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:50,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:53,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-1] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:53,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-1] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:56,669 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-1] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:56,671 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-1] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:59,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-1] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:29:59,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-1] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:02,692 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-1] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:06,939 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-1] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:06,940 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:06,993 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:08,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-1] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:08,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-1] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:11,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:11,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:14,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:14,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:17,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:17,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:20,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:20,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:23,676 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:23,681 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:26,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:26,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:29,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:29,753 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:32,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:32,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:35,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:35,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:38,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:38,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:41,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:41,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:44,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:44,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:47,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:47,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:50,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:50,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:53,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:53,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:56,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:56,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:59,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:30:59,668 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:02,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:02,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:05,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:05,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:08,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:08,779 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:11,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:11,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:14,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:14,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:17,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:17,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-6] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:20,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:20,670 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:23,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:23,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:26,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:26,668 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:29,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:29,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:32,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:32,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:35,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:35,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:38,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:38,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:41,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:41,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:44,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:44,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:47,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:47,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:50,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:50,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:53,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:53,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:56,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:56,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:59,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:31:59,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:02,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:02,667 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:05,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:05,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:08,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:08,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:11,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:11,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:14,654 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:14,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:17,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:17,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:20,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:20,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:23,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:23,669 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:26,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:26,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:29,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:29,669 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:32,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:33,733 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:35,687 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:35,739 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:38,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:40,522 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:41,691 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:41,951 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:44,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:44,722 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:47,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:48,484 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:50,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:52,924 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:53,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:53,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:56,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:57,760 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:32:59,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:00,692 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:02,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:03,012 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:05,682 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:06,330 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:08,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:09,369 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:11,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:13,297 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:14,693 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:16,338 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:17,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:18,104 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:20,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:21,279 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:23,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:23,676 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:26,673 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:26,678 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:29,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:30,314 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:32,880 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:32,922 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:35,938 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:35,954 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:38,697 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:40,401 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:41,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:42,823 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:44,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:45,072 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:47,667 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:47,674 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:50,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:50,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:53,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:54,773 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:56,800 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:56,813 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:59,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:33:59,810 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:02,686 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:02,688 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:05,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:05,797 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:08,703 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:08,738 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:11,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:11,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:14,669 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:14,670 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:17,687 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:17,691 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:20,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:20,669 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:23,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:25,379 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:26,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:26,681 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:29,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:31,084 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:32,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:33,549 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:35,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:35,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:38,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:38,689 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:41,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:43,495 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:44,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:44,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:47,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:48,917 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:50,706 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:50,891 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:53,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:54,374 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:56,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:56,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:59,668 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:34:59,678 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:02,674 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:04,764 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:05,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:05,668 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:08,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:11,464 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:11,730 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:11,735 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:14,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:14,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:17,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:17,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:20,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:21,122 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:23,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:24,178 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:26,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:26,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:29,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:29,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:32,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:32,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:35,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:35,920 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:38,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:38,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:41,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:41,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:44,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:44,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:47,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:47,667 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:50,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:50,678 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:53,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:53,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:56,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:56,669 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:59,687 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:35:59,694 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:02,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:02,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:05,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:05,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:08,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:08,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:11,671 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:11,675 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:14,694 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:14,696 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:17,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:17,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:20,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:20,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:23,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:23,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:26,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:26,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:29,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:29,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:32,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:32,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:35,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:35,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:38,672 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:38,674 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:41,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:41,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:44,683 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:44,688 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:47,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:47,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:50,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:50,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:53,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:53,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:56,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:56,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:36:59,937 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:00,045 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:02,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:03,231 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:05,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:06,950 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:08,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:08,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:11,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:11,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:14,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:14,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:17,685 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:17,689 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:20,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:20,996 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:23,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:23,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:26,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:27,291 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:29,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:30,141 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:32,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:33,763 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:35,653 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:36,078 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:38,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:38,710 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:41,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:41,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:44,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:44,854 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:47,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:47,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:50,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:50,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:53,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:53,667 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:56,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:56,668 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:59,674 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:37:59,677 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:02,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:02,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:05,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:05,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:08,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:08,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:11,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:11,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:14,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:14,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:17,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:17,667 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:20,676 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:20,681 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:23,705 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:23,708 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:26,670 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:27,273 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:29,756 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:29,760 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:32,673 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:34,222 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:35,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:36,813 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:38,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:38,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:41,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:41,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:44,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:44,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:47,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:47,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:50,653 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:50,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:53,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:53,678 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:56,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:56,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:59,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:38:59,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:02,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:02,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:05,667 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:05,672 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:08,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:10,145 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:11,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:11,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:14,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:14,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:17,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:17,676 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:20,688 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:20,689 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:23,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:23,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:26,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:26,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:29,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:31,146 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:32,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:33,638 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:35,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:36,006 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:38,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:39,348 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:41,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:41,830 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:44,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:45,438 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:47,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:47,667 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:50,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:50,702 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:53,668 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:53,672 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:56,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:56,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:59,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:39:59,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:02,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:02,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:05,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:05,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:08,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:08,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:11,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:12,700 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:14,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:14,873 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:17,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:18,481 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:20,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:21,860 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:23,672 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:23,675 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:26,707 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:28,776 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:29,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:30,785 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:32,670 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:32,673 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:35,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:35,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:38,653 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:38,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:41,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:41,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:44,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:44,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:47,677 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:48,055 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:50,668 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:50,671 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:53,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:53,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:56,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:56,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:59,696 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:40:59,885 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:02,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:03,236 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:05,654 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:05,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:08,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:08,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:11,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:11,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:14,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:14,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:17,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:17,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-2] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:20,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:20,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:23,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:23,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:26,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:26,670 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:29,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:29,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:32,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:32,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:35,654 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:35,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:38,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:38,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:41,653 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:41,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:44,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:44,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:47,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:47,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:50,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:50,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:53,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:53,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:56,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:56,672 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:59,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:41:59,668 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:02,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:02,667 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:05,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:05,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:08,670 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:08,696 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:11,688 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:11,693 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:14,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:14,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:17,653 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:17,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:20,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:20,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:23,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:23,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:26,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:26,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:29,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:29,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:32,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:32,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:35,657 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:35,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:38,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:38,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:41,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:41,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:44,656 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:44,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:47,662 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:47,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:50,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:50,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:53,660 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:53,808 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:56,677 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:56,682 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:59,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:42:59,664 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:43:02,655 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:43:02,658 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-4] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@52d2bcd3, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@65c99, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], java.lang.Object@334e991e=public java.lang.Object java.util.HashMap.get(java.lang.Object), compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@486562f1={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@51305309, public void java.util.HashMap.clear()=[Ljava.lang.Class;@3ca5cbff, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@7b56cc9c, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@4986b5fb, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@1afd0fd9, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@895d54a, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@456acae8, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@393f96d3, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@4bcec5ea, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@6d57665c, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@7ef9dc94, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@3b354496, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@669278f, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@50dac498, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@60f7bf6b, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@71f74617, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@3eed52f9, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@3815bfb8, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@65444336, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@2ec86677, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@7a6693cd, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f9b0b46, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@2801a870, public int java.util.HashMap.size()=[Ljava.lang.Class;@451798d9}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), java.lang.Object@ce3b245=freemarker.ext.beans.OverloadedMethods@ba1934d, isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:43:05,101 INFO  com.kovka.web.util.Initializer (deRegistering:108) [localhost-startStop-2] - DeRegistering jdbc driver: com.mysql.jdbc.Driver@6c4adc85
2017-04-11 19:43:05,135 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:109) [localhost-startStop-2] - Creating a new SqlSession
2017-04-11 19:43:05,151 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:145) [localhost-startStop-2] - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d647017] was not registered for synchronization because synchronization is not active
2017-04-11 19:43:05,152 DEBUG org.mybatis.spring.SqlSessionUtils (closeSqlSession:173) [localhost-startStop-2] - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d647017]
2017-04-11 19:43:47,698 DEBUG org.apache.ibatis.logging.LogFactory (setImplementation:135) [RMI TCP Connection(2)-127.0.0.1] - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2017-04-11 19:43:49,234 INFO  com.kovka.web.util.Initializer (contextInitialized:49) [RMI TCP Connection(2)-127.0.0.1] - -- start application -- 
2017-04-11 19:43:49,235 INFO  com.kovka.web.util.Initializer (contextInitialized:63) [RMI TCP Connection(2)-127.0.0.1] - **************************************************************************************************
2017-04-11 19:43:49,236 INFO  com.kovka.web.util.Initializer (contextInitialized:64) [RMI TCP Connection(2)-127.0.0.1] - contextPath=>D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\
2017-04-11 19:43:49,236 INFO  com.kovka.web.util.Initializer (contextInitialized:65) [RMI TCP Connection(2)-127.0.0.1] - **************************************************************************************************
2017-04-11 19:43:49,240 INFO  com.kovka.web.util.Initializer (contextInitialized:80) [RMI TCP Connection(2)-127.0.0.1] - Application 1.0 intitilize params [imagePath:D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\]
2017-04-11 19:43:49,240 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(2)-127.0.0.1] - D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\ folder already exist
2017-04-11 19:43:49,241 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(2)-127.0.0.1] - D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\\data folder already exist
2017-04-11 19:43:49,341 INFO  com.kovka.web.util.Initializer (contextInitialized:90) [RMI TCP Connection(2)-127.0.0.1] - -- application started -- 
2017-04-11 19:43:51,234 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(2)-127.0.0.1] - Couldn't find template in cache for "org/apache/struts2/dispatcher/error.ftl"("ru_RU", UTF-8, parsed); will try to load it.
2017-04-11 19:43:51,239 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(2)-127.0.0.1] - TemplateLoader.findTemplateSource("org/apache/struts2/dispatcher/error.ftl"): Found
2017-04-11 19:43:51,241 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(2)-127.0.0.1] - Loading template for "org/apache/struts2/dispatcher/error.ftl"("ru_RU", UTF-8, parsed) from "jar:file:/D:/Serozh/workspace/git/Kovka/target/Kovka-1.0-SNAPSHOT/WEB-INF/lib/struts2-core-2.5.2.jar!/org/apache/struts2/dispatcher/error.ftl"
2017-04-11 19:43:54,468 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:43:54,472 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:43:56,812 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:43:56,819 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-9] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:43:59,692 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:44:00,630 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-10] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:44:02,991 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:44:02,997 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:44:05,681 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:44:05,690 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:44:08,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:44:08,675 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:44:11,663 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:44:11,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:44:14,661 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:44:14,666 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:44:17,659 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:44:17,665 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:44:21,001 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:44:21,128 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [http-bio-8787-exec-5] - Key "rootloc" was not found on instance of java.util.HashMap. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), java.lang.Object@212b0f2a=freemarker.ext.beans.OverloadedMethods@1093c6ff, getOrDefault=public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object), computeIfAbsent=public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function), values=public java.util.Collection java.util.HashMap.values(), replace=freemarker.ext.beans.OverloadedMethods@4b2a2ab, replaceAll=public void java.util.HashMap.replaceAll(java.util.function.BiFunction), remove=freemarker.ext.beans.OverloadedMethods@3343e6ff, containsValue=public boolean java.util.HashMap.containsValue(java.lang.Object), put=public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object), empty=java.beans.PropertyDescriptor[name=empty; propertyType=boolean; readMethod=public boolean java.util.HashMap.isEmpty()], compute=public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction), java.lang.Object@ec79495={public boolean java.util.HashMap.isEmpty()=[Ljava.lang.Class;@5e196a13, public void java.util.HashMap.clear()=[Ljava.lang.Class;@50b3fb11, public int java.util.AbstractMap.hashCode()=[Ljava.lang.Class;@4185ac56, public boolean java.util.HashMap.containsValue(java.lang.Object)=[Ljava.lang.Class;@6d5dde87, public java.lang.Object java.util.HashMap.put(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@788168cd, public boolean java.util.AbstractMap.equals(java.lang.Object)=[Ljava.lang.Class;@37256fbf, public void java.util.HashMap.replaceAll(java.util.function.BiFunction)=[Ljava.lang.Class;@5b2e9211, public java.lang.String java.util.AbstractMap.toString()=[Ljava.lang.Class;@5804c615, public java.lang.Object java.util.HashMap.getOrDefault(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@2b300ad8, public void java.util.HashMap.forEach(java.util.function.BiConsumer)=[Ljava.lang.Class;@3774d096, public boolean java.util.HashMap.containsKey(java.lang.Object)=[Ljava.lang.Class;@18656273, public java.lang.Object java.util.HashMap.computeIfAbsent(java.lang.Object,java.util.function.Function)=[Ljava.lang.Class;@662f3b04, public java.util.Collection java.util.HashMap.values()=[Ljava.lang.Class;@4d629bd3, public java.util.Set java.util.HashMap.entrySet()=[Ljava.lang.Class;@5c830289, public java.lang.Object java.util.HashMap.clone()=[Ljava.lang.Class;@6fc68590, public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)=[Ljava.lang.Class;@702e6477, public java.util.Set java.util.HashMap.keySet()=[Ljava.lang.Class;@29cbd5a2, public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@6d180d58, public java.lang.Object java.util.HashMap.compute(java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@36a9ef6e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@35a73810, public void java.util.HashMap.putAll(java.util.Map)=[Ljava.lang.Class;@42b69dc3, public java.lang.Object java.util.HashMap.get(java.lang.Object)=[Ljava.lang.Class;@6f692a00, public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)=[Ljava.lang.Class;@16c27a1c, public int java.util.HashMap.size()=[Ljava.lang.Class;@1aa9b76c}, hashCode=public int java.util.AbstractMap.hashCode(), putAll=public void java.util.HashMap.putAll(java.util.Map), get=public java.lang.Object java.util.HashMap.get(java.lang.Object), merge=public java.lang.Object java.util.HashMap.merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], keySet=public java.util.Set java.util.HashMap.keySet(), java.lang.Object@ff15b6e=public java.lang.Object java.util.HashMap.get(java.lang.Object), entrySet=public java.util.Set java.util.HashMap.entrySet(), forEach=public void java.util.HashMap.forEach(java.util.function.BiConsumer), containsKey=public boolean java.util.HashMap.containsKey(java.lang.Object), isEmpty=public boolean java.util.HashMap.isEmpty(), clear=public void java.util.HashMap.clear(), computeIfPresent=public java.lang.Object java.util.HashMap.computeIfPresent(java.lang.Object,java.util.function.BiFunction), size=public int java.util.HashMap.size(), equals=public boolean java.util.AbstractMap.equals(java.lang.Object), clone=public java.lang.Object java.util.HashMap.clone(), toString=public java.lang.String java.util.AbstractMap.toString(), putIfAbsent=public java.lang.Object java.util.HashMap.putIfAbsent(java.lang.Object,java.lang.Object)}
2017-04-11 19:47:38,556 INFO  com.kovka.web.util.Initializer (deRegistering:108) [localhost-startStop-2] - DeRegistering jdbc driver: com.mysql.jdbc.Driver@2fa755b
2017-04-11 19:47:38,590 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:109) [localhost-startStop-2] - Creating a new SqlSession
2017-04-11 19:47:38,610 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:145) [localhost-startStop-2] - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f6a3875] was not registered for synchronization because synchronization is not active
2017-04-11 19:47:38,611 DEBUG org.mybatis.spring.SqlSessionUtils (closeSqlSession:173) [localhost-startStop-2] - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f6a3875]
2017-04-11 19:48:04,951 DEBUG org.apache.ibatis.logging.LogFactory (setImplementation:135) [RMI TCP Connection(3)-127.0.0.1] - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2017-04-11 19:48:06,343 INFO  com.kovka.web.util.Initializer (contextInitialized:49) [RMI TCP Connection(3)-127.0.0.1] - -- start application -- 
2017-04-11 19:48:06,345 INFO  com.kovka.web.util.Initializer (contextInitialized:63) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 19:48:06,345 INFO  com.kovka.web.util.Initializer (contextInitialized:64) [RMI TCP Connection(3)-127.0.0.1] - contextPath=>D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\
2017-04-11 19:48:06,345 INFO  com.kovka.web.util.Initializer (contextInitialized:65) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 19:48:06,372 INFO  com.kovka.web.util.Initializer (contextInitialized:80) [RMI TCP Connection(3)-127.0.0.1] - Application 1.0 intitilize params [imagePath:D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\]
2017-04-11 19:48:06,372 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\ folder already exist
2017-04-11 19:48:06,373 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\\data folder already exist
2017-04-11 19:48:06,485 INFO  com.kovka.web.util.Initializer (contextInitialized:90) [RMI TCP Connection(3)-127.0.0.1] - -- application started -- 
2017-04-11 19:48:08,474 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - Couldn't find template in cache for "org/apache/struts2/dispatcher/error.ftl"("ru_RU", UTF-8, parsed); will try to load it.
2017-04-11 19:48:08,480 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - TemplateLoader.findTemplateSource("org/apache/struts2/dispatcher/error.ftl"): Found
2017-04-11 19:48:08,482 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - Loading template for "org/apache/struts2/dispatcher/error.ftl"("ru_RU", UTF-8, parsed) from "jar:file:/D:/Serozh/workspace/git/Kovka/target/Kovka-1.0-SNAPSHOT/WEB-INF/lib/struts2-core-2.5.2.jar!/org/apache/struts2/dispatcher/error.ftl"
2017-04-11 19:52:29,523 INFO  com.kovka.web.util.Initializer (deRegistering:108) [localhost-startStop-2] - DeRegistering jdbc driver: com.mysql.jdbc.Driver@31839256
2017-04-11 19:52:29,552 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:109) [localhost-startStop-2] - Creating a new SqlSession
2017-04-11 19:52:29,563 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:145) [localhost-startStop-2] - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4744c618] was not registered for synchronization because synchronization is not active
2017-04-11 19:52:29,564 DEBUG org.mybatis.spring.SqlSessionUtils (closeSqlSession:173) [localhost-startStop-2] - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4744c618]
2017-04-11 19:52:59,971 DEBUG org.apache.ibatis.logging.LogFactory (setImplementation:135) [RMI TCP Connection(3)-127.0.0.1] - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2017-04-11 19:53:01,319 INFO  com.kovka.web.util.Initializer (contextInitialized:49) [RMI TCP Connection(3)-127.0.0.1] - -- start application -- 
2017-04-11 19:53:01,320 INFO  com.kovka.web.util.Initializer (contextInitialized:63) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 19:53:01,321 INFO  com.kovka.web.util.Initializer (contextInitialized:64) [RMI TCP Connection(3)-127.0.0.1] - contextPath=>D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\
2017-04-11 19:53:01,321 INFO  com.kovka.web.util.Initializer (contextInitialized:65) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 19:53:01,324 INFO  com.kovka.web.util.Initializer (contextInitialized:80) [RMI TCP Connection(3)-127.0.0.1] - Application 1.0 intitilize params [imagePath:D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\]
2017-04-11 19:53:01,325 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\ folder already exist
2017-04-11 19:53:01,325 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\\data folder already exist
2017-04-11 19:53:01,355 INFO  com.kovka.web.util.Initializer (contextInitialized:90) [RMI TCP Connection(3)-127.0.0.1] - -- application started -- 
2017-04-11 19:53:02,793 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - Couldn't find template in cache for "org/apache/struts2/dispatcher/error.ftl"("ru_RU", UTF-8, parsed); will try to load it.
2017-04-11 19:53:02,797 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - TemplateLoader.findTemplateSource("org/apache/struts2/dispatcher/error.ftl"): Found
2017-04-11 19:53:02,799 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - Loading template for "org/apache/struts2/dispatcher/error.ftl"("ru_RU", UTF-8, parsed) from "jar:file:/D:/Serozh/workspace/git/Kovka/target/Kovka-1.0-SNAPSHOT/WEB-INF/lib/struts2-core-2.5.2.jar!/org/apache/struts2/dispatcher/error.ftl"
2017-04-11 19:54:27,765 INFO  com.kovka.web.util.Initializer (deRegistering:108) [localhost-startStop-2] - DeRegistering jdbc driver: com.mysql.jdbc.Driver@678ec7c
2017-04-11 19:54:27,781 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:109) [localhost-startStop-2] - Creating a new SqlSession
2017-04-11 19:54:27,794 DEBUG org.mybatis.spring.SqlSessionUtils (getSqlSession:145) [localhost-startStop-2] - SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3269f18c] was not registered for synchronization because synchronization is not active
2017-04-11 19:54:27,794 DEBUG org.mybatis.spring.SqlSessionUtils (closeSqlSession:173) [localhost-startStop-2] - Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3269f18c]
2017-04-11 19:55:01,292 DEBUG org.apache.ibatis.logging.LogFactory (setImplementation:135) [RMI TCP Connection(3)-127.0.0.1] - Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
2017-04-11 19:55:02,444 INFO  com.kovka.web.util.Initializer (contextInitialized:49) [RMI TCP Connection(3)-127.0.0.1] - -- start application -- 
2017-04-11 19:55:02,444 INFO  com.kovka.web.util.Initializer (contextInitialized:63) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 19:55:02,445 INFO  com.kovka.web.util.Initializer (contextInitialized:64) [RMI TCP Connection(3)-127.0.0.1] - contextPath=>D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\
2017-04-11 19:55:02,445 INFO  com.kovka.web.util.Initializer (contextInitialized:65) [RMI TCP Connection(3)-127.0.0.1] - **************************************************************************************************
2017-04-11 19:55:02,448 INFO  com.kovka.web.util.Initializer (contextInitialized:80) [RMI TCP Connection(3)-127.0.0.1] - Application 1.0 intitilize params [imagePath:D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\]
2017-04-11 19:55:02,448 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\ folder already exist
2017-04-11 19:55:02,448 INFO  com.kovka.web.util.Initializer (initFolders:136) [RMI TCP Connection(3)-127.0.0.1] - D:\Serozh\workspace\git\Kovka\target\Kovka-1.0-SNAPSHOT\\data folder already exist
2017-04-11 19:55:02,473 INFO  com.kovka.web.util.Initializer (contextInitialized:90) [RMI TCP Connection(3)-127.0.0.1] - -- application started -- 
2017-04-11 19:55:04,144 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - Couldn't find template in cache for "org/apache/struts2/dispatcher/error.ftl"("ru_RU", UTF-8, parsed); will try to load it.
2017-04-11 19:55:04,149 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - TemplateLoader.findTemplateSource("org/apache/struts2/dispatcher/error.ftl"): Found
2017-04-11 19:55:04,152 DEBUG freemarker.log._Log4jLoggerFactory$Log4jLogger (debug:45) [RMI TCP Connection(3)-127.0.0.1] - Loading template for "org/apache/struts2/dispatcher/error.ftl"("ru_RU", UTF-8, parsed) from "jar:file:/D:/Serozh/workspace/git/Kovka/target/Kovka-1.0-SNAPSHOT/WEB-INF/lib/struts2-core-2.5.2.jar!/org/apache/struts2/dispatcher/error.ftl"
